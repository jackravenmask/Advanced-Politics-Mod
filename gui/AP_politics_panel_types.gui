@panel_width = 400  				

types politics_panel_types {

	type laws_list_proposal_selection = vbox {
		layoutpolicy_horizontal = preferred
		layoutpolicy_vertical = preferred
		layoutstretchfactor_horizontal = 1

		using = entry_bg_fancy

		widget = {
			layoutpolicy_horizontal = preferred
			tooltip = "ACTIVE_LAWS_DESC"
			size = { 0 38 }

			background = {
				using = default_header_bg
				using = frame_small_mask_top
			}

			textbox = {
				block "header" {
					raw_text = "INSERT_HEADER"
				}
				size = { 100% 100% }
				align = center|nobaseline
				using = fontsize_large
				default_format = "#title"
				elide = right
			}
		}

		vbox = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = preferred
			margin_top = 5
			block "law_datamodel" {
			}

			item = {
				vbox = {
					margin = { 10 3 }
					layoutpolicy_horizontal = preferred
					layoutpolicy_vertical = expanding
					widgetid = "[Law.GetGroup.GetKey]"

					background = {
						visible = "[Law.IsBeingEnacted]"
						using = highlighted_square_selection
						margin = { -7 0 }
						margin_top = 102
					}

					active_law = {
						visible = "[Not(Law.IsBeingEnacted)]"
					}

					enacting_law = {
						visible = "[Law.IsBeingEnacted]"
					}
				}
			}
		}
		widget = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = expanding
		}
	}

	type active_law_proposal_selection = vbox {
		layoutpolicy_horizontal = preferred
		layoutpolicy_vertical = expanding
		onmousehierarchyenter = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('show')]"
		onmousehierarchyleave = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('hide')]"
		using = tooltip_ws
		tooltip = "DATA_LAW_NAME_TOOLTIP_CONDENSED"

		tooltipwidget = {
			FancyTooltip_Law = {}
		}

		widget = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = fixed
			size = { 0 97 }

			onmousehierarchyenter = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('show')]"
			onmousehierarchyleave = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('hide')]"

			button = {
				using = default_button
				size = { 100% 100% }
				onclick = "[InformationPanelBar.OpenChangeLaw(Law.AccessSelf)]"
			}

			hbox = {
				layoutpolicy_horizontal = preferred
				layoutpolicy_vertical = expanding
				margin = { 5 0 }
				margin_right = 20

				law_icon = {}

				vbox = {
					layoutpolicy_horizontal = preferred
					layoutpolicy_vertical = expanding
					margin = { 5 5 }

					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}

					textbox = {
						layoutpolicy_horizontal = preferred
						text = "LAW_GROUP"
						align = left|nobaseline
						size = { 0 20 }
						elide = right
					}

					textbox = {
						layoutpolicy_horizontal = preferred
						text = "LAW"
						default_format = "#variable"
						align = left|nobaseline
						size = { 0 30 }
						using = fontsize_xl
						elide = right
						margin_bottom = 5
					}

					approval_info_small2 = {
						layoutpolicy_horizontal = preferred

						name = "approval_info"
						alpha = 0

						state = {
							name = show
							using = default_show_properties_fast
						}
						state = {
							name = hide
							using = default_hide_properties_fast
						}
					}

					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}
				}

				widget = {
					size = { 40 60 }
					datacontext = "[Law.GetGroup]"
					datacontext = "[Law]"
					tooltip = "TOOLTIP_CHANGE_FROM_LAW"

					icon = {
						texture = "gfx/interface/icons/generic_icons/toggle.dds"
						alpha = "[TransparentIfFalse(Or(GreaterThan_int32(LawGroup.GetNumEnactable, '(int32)0'), GreaterThan_int32(LawGroup.GetNumPotentialEnactable, '(int32)0')))]"

						size = { 30 30 }
						parentanchor = bottom|hcenter
					}

					textbox = {
						visible = "[Not(GetPlayer.IsEnactingLaw)]"
						background = {
							using = blurry_dark_background
						}
						size = { 40 30 }
						using = fontsize_xl
						align = hcenter|nobaseline
						alpha = "[TransparentIfZero_int32(LawGroup.GetNumEnactable)]"
						raw_text = "#variable [LawGroup.GetNumEnactable]#!"
						parentanchor = hcenter
					}

					textbox = {
						visible = "[GetPlayer.IsEnactingLaw]"
						background = {
							using = blurry_dark_background
						}
						raw_text = "#variable [LawGroup.GetNumPotentialEnactable]#!"
						tooltip = "TOOLTIP_CHANGE_FROM_LAW_CURRENTLY_ENACTING"
						alpha = "[TransparentIfZero_int32(LawGroup.GetNumPotentialEnactable)]"
						size = { 40 30 }
						using = fontsize_xl
						align = hcenter|nobaseline
						parentanchor = hcenter
					}
				}
			}
		}
	}	




	type add_new_proposal = vbox {
		layoutpolicy_horizontal = preferred
		#layoutpolicy_vertical = expanding
		#onmousehierarchyenter = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('show')]"
		#onmousehierarchyleave = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('hide')]"
		#using = tooltip_ws
		#tooltip = "DATA_LAW_NAME_TOOLTIP_CONDENSED"
	
		#tooltipwidget = {
		#	FancyTooltip_Law = {}
		#}
		
		
		widget = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = fixed
			
			size = { 0 85 }
			
			#onmousehierarchyenter = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('show')]"
			#onmousehierarchyleave = "[PdxGuiWidget.FindChild('approval_info').TriggerAnimation('hide')]"
	
			button = {
				using = default_button
				size = { 100% 100% }
				#blockoverride "texture" {
				#	texture = "gfx/interface/buttons/button_icons/plus.dds"
				#}
				#texture = "gfx/interface/buttons/button_icons/plus.dds"
				#onclick = "[InformationPanelBar.OpenChangeLaw(Law.AccessSelf)]"
				block "onclick" {}
				icon = {
					#layoutpolicy_horizontal = expanding
					#layoutpolicy_vertical = expanding
					size = {75 75}
					parentanchor = center
					texture = "gfx/interface/buttons/button_icons/plus.dds"
				}
			}
	
			
		}
	}

	type proposal_list = vbox {
		layoutpolicy_vertical = expanding
		#layoutpolicy_horizontal = expanding
		
		using = entry_bg_fancy
		min_width = @panel_width
		
		widget = {
			layoutpolicy_horizontal = preferred
			block "header_tooltip"{
				tooltip = "CURRENT_PROPOSALS"
			}
			#tooltip = "ACTIVE_LAWS_DESC"
			size = { 0 38 }

			background = {
				using = default_header_bg
				using = frame_small_mask_top
			}

			textbox = {
				block "header" {
					raw_text = "INSERT_HEADER"
				}
				size = { 100% 100% }
				align = center|nobaseline
				using = fontsize_large
				default_format = "#title"
				elide = right
			}
		}
		dynamicgridbox = {
			block "proposal_datamodel" {}
			#datamodel = "[GetPlayer.MakeScope.GetList('proposed_laws')]"
			flipdirection = yes
			item = {
				flowcontainer = {
					block "proposal_datacontext" {}
					#datacontext = "[Scope.GetLaw]"
		
					flowcontainer = {
						direction = vertical
						block "proposal_item_visible" {}
						
						margin_bottom = 5
						background = {
							#visible = "[Not(Law.IsActive)]"
							using = entry_bg
						}
						widget = {
							size = { @panel_width 90 }

							
							block "proposal_item_tooltip" {}
							
							#tooltipwidget = {
							#	FancyTooltip_Law = {}
							#}
							flowcontainer = {
								position = {10 0}
								parentanchor = vcenter
								spacing = 5
								block "proposal_item_content" {}
								#law_icon = {
								#	size = {70 70}
								#}
								#flowcontainer = {
								#	parentanchor = vcenter
								#	direction = vertical
								#	textbox = {
								#		text = "[Law.GetGroup.GetNameNoFormatting]"
								#		align = left|nobaseline
								#		size = { 250 20 }
								#		elide = right
								#	}
								#	textbox = {
								#		text = "LAW"
								#		align = left|nobaseline
								#		size = { 250 30 }
								#		using = fontsize_xl
								#		elide = right
								#	}
								#}
							}

						}
					}
				}
			}
		}
		block "add_proposal_button" {
			add_new_proposal {}
		}
		
	}


	type laws_list_proposal_selection = vbox {
		layoutpolicy_horizontal = preferred
		layoutpolicy_vertical = preferred
		layoutstretchfactor_horizontal = 1

		using = entry_bg_fancy

		widget = {
			layoutpolicy_horizontal = preferred
			tooltip = "ACTIVE_LAWS_DESC"
			size = { 0 38 }

			background = {
				using = default_header_bg
				using = frame_small_mask_top
			}

			textbox = {
				block "header" {
					raw_text = "INSERT_HEADER"
				}
				size = { 100% 100% }
				align = center|nobaseline
				using = fontsize_large
				default_format = "#title"
				elide = right
			}
		}

		vbox = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = preferred
			margin_top = 5
			block "law_datamodel" {
			}

			item = {
				vbox = {
					margin = { 10 3 }
					layoutpolicy_horizontal = preferred
					layoutpolicy_vertical = expanding
					widgetid = "[Law.GetGroup.GetKey]"

					background = {
						visible = "[Law.IsBeingEnacted]"
						using = highlighted_square_selection
						margin = { -7 0 }
						margin_top = 102
					}

					active_law = {
						visible = "[Not(Law.IsBeingEnacted)]"
					}

					enacting_law = {
						visible = "[Law.IsBeingEnacted]"
					}
				}
			}
		}
		widget = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = expanding
		}
	}

	type legislation_success_progressbar = widget{
		size = { 300 40 }
		
		background = {
			texture = "gfx/interface/progressbar/progressbar_empty.dds"
			spriteType = Corneredtiled
			spriteborder = { 4 4 }
			texture_density = 2
			
			using = progressbar_texture_properties
		}
		
		### progressbar left
		widget = {
			size = { 50% 100% }
			scissor = yes
			
			progressbar = {
				### REVERSE HACK

				block "negative_textures" {
					progresstexture = "gfx/interface/progressbar/progressbar_empty.dds"
					noprogresstexture = "gfx/interface/progressbar/progressbar_bad.dds"
				}
				
				size = { 100% 100% }
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
				texture_density = 2
				skip_initial_animation = yes
				
				block "negative_min_max_values" {
					min = -1
					max = 0
				}

				block "value_left" {}
				
				direction = horizontal
				using = progressbar_texture_properties
			}
		}
		
		### progressbar right
		widget = {
			size = { 50% 100% }
			parentanchor = right
			scissor = yes
			
			progressbar = {

				block "positive_textures" {
					noprogresstexture = "gfx/interface/progressbar/progressbar_empty.dds"
					progresstexture = "gfx/interface/progressbar/progressbar_green.dds"
				}
				
				size = { 100% 100% }
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
				texture_density = 2
				skip_initial_animation = yes
				
				block "positive_min_max_values" {
					min = 0
					max = 1
				}

				block "value_right" {}
				
				direction = horizontal
				
				using = progressbar_marker_indicator

				blockoverride "glow" {
					texture = "gfx/interface/progressbar/progressbar_green_glow.dds"
				}
				blockoverride "glow_line" {
					texture = "gfx/interface/progressbar/progressbar_green_glow_line.dds"
				}
				
				using = progressbar_texture_properties
			}
		}	
		
		### frame
		widget = {
			size = { 100% 100% }
			
			background = {
				name = "frame"
				texture = "gfx/interface/progressbar/progressbar_frame.dds"
				spriteType = Corneredstretched
				spriteborder = { 6 6 }
				texture_density = 2
				margin = { 3 3 }
			}
		}
		### center divider
		widget = {
			size = { 3 100% }
			parentanchor = center
			
			background = {
				texture = "gfx/interface/progressbar/progressbar_center_divider.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				texture_density = 2
				margin = { 0 1 }
			}
		}

	}


	
}


